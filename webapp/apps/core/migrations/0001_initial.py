# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-05-04 11:06
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('payment', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('metadata', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DebtFunds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('number_of_holdings_total', models.BigIntegerField()),
                ('top_ten_holdings', models.FloatField()),
                ('average_maturity', models.FloatField()),
                ('modified_duration', models.FloatField()),
                ('yield_to_maturity', models.FloatField()),
                ('number_of_holdings_top_three_portfolios', django.contrib.postgres.fields.hstore.HStoreField()),
                ('credit_quality_a', models.FloatField()),
                ('credit_quality_aa', models.FloatField()),
                ('credit_quality_aaa', models.FloatField()),
                ('average_credit_quality', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EquityFunds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('number_of_holdings_total', models.BigIntegerField()),
                ('top_ten_holdings', models.FloatField()),
                ('portfolio_turnover', models.FloatField()),
                ('number_of_holdings_top_three_portfolios', django.contrib.postgres.fields.hstore.HStoreField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Fund',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('isin', models.CharField(max_length=50, unique=True)),
                ('mstar_id', models.CharField(max_length=50, unique=True)),
                ('fund_id', models.CharField(max_length=50, unique=True)),
                ('fund_name', models.CharField(max_length=255)),
                ('legal_name', models.CharField(max_length=255)),
                ('fund_standard_name', models.CharField(max_length=255)),
                ('branding_name', models.CharField(max_length=255)),
                ('broad_category_group', models.CharField(max_length=50)),
                ('legal_structure', models.CharField(max_length=50)),
                ('category_name', models.CharField(max_length=50)),
                ('inception_date', models.DateField()),
                ('type_of_fund', models.CharField(choices=[('E', 'Equity'), ('D', 'Debt'), ('T', 'ELSS')], max_length=1)),
                ('benchmark', models.CharField(blank=True, max_length=255)),
                ('minimum_investment', models.FloatField(blank=True)),
                ('minimum_sip_investment', models.FloatField(blank=True)),
                ('fund_rank', models.IntegerField(null=True)),
                ('image_url', models.ImageField(blank=True, max_length=700, null=True, upload_to='fund/image/')),
                ('category_code', models.CharField(blank=True, max_length=100, null=True)),
                ('bse_neft_scheme_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Scheme Code when investment amount is below Rs. 2 lakhs ')),
                ('bse_rgts_scheme_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Scheme Code when investment amount is above Rs. 2 lakhs ')),
                ('amc_code', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ['type_of_fund', 'fund_rank'],
            },
        ),
        migrations.CreateModel(
            name='FundDataPointsChangeDaily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('aum', models.BigIntegerField()),
                ('capital_gain', models.FloatField()),
                ('capital_gain_percentage', models.FloatField()),
                ('day_end_date', models.DateField()),
                ('day_end_nav', models.FloatField()),
                ('currency', models.CharField(max_length=100)),
                ('return_one_year', models.FloatField()),
                ('return_three_year', models.FloatField()),
                ('return_five_year', models.FloatField()),
                ('return_one_month', models.FloatField()),
                ('return_three_month', models.FloatField()),
                ('return_one_day', models.FloatField()),
                ('beta', models.FloatField()),
                ('fund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fund', to='core.Fund')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FundDataPointsChangeMonthly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('star_rating', models.IntegerField()),
                ('risk', models.CharField(max_length=50)),
                ('max_front_load', models.FloatField()),
                ('max_deferred_load', models.CharField(default='Nil', max_length=200)),
                ('expense_ratio', models.FloatField()),
                ('managers', django.contrib.postgres.fields.hstore.HStoreField()),
                ('investment_strategy', models.TextField()),
                ('fund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Fund')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FundOrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('order_amount', models.FloatField(default=0.0)),
                ('allotment_date', models.DateField(blank=True, default=None, null=True)),
                ('next_allotment_date', models.DateField(blank=True, default=None, null=True)),
                ('is_verified', models.BooleanField(default=False, verbose_name='is verified')),
                ('is_initial', models.BooleanField(default=False, verbose_name='is first order')),
                ('unit_alloted', models.IntegerField(blank=True, null=True)),
                ('agreed_sip', models.FloatField(default=0.0)),
                ('agreed_lumpsum', models.FloatField(default=0.0)),
                ('bse_transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('internal_ref_no', models.CharField(default=0, max_length=10, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FundRedeemItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('redeem_amount', models.FloatField(default=0.0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalCategoryData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('category_code', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('nav', models.FloatField()),
            ],
            options={
                'ordering': ['-modified_at'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalFundData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('date', models.DateField()),
                ('nav', models.FloatField()),
                ('fund_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Fund')),
            ],
            options={
                'ordering': ['-modified_at'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalIndexData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('date', models.DateField()),
                ('nav', models.FloatField()),
            ],
            options={
                'ordering': ['-modified_at'],
            },
        ),
        migrations.CreateModel(
            name='Indices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mstar_id', models.CharField(max_length=50, unique=True)),
                ('index_name', models.CharField(max_length=100)),
                ('inception_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('option_id', models.CharField(blank=True, max_length=254)),
                ('text', models.TextField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('metadata', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('order_id', models.CharField(default=0, max_length=10, unique=True)),
                ('order_status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Ongoing'), (2, 'Complete')], default=0)),
                ('fund_order_items', models.ManyToManyField(to='core.FundOrderItem')),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='payment.Transaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlanAssestAllocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('retirement_allocation', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('tax_allocation', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('property_allocation', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('education_allocation', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('wedding_allocation', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('event_allocation', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('invest_allocation', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('elss_percentage', models.FloatField()),
                ('debt_percentage', models.FloatField()),
                ('equity_percentage', models.FloatField()),
                ('total_sum_invested', models.FloatField(blank=True, default=0.0, null=True)),
                ('returns_value', models.FloatField(blank=True, default=0.0, null=True)),
                ('returns_percentage', models.FloatField(blank=True, default=0.0, null=True)),
                ('has_invested', models.BooleanField(default=False, verbose_name='has invested')),
                ('investment_date', models.DateField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('broad_category_group', models.CharField(choices=[('E', 'Equity'), ('D', 'Debt'), ('T', 'ELSS')], max_length=1)),
                ('sip', models.FloatField(blank=True, default=0.0, null=True)),
                ('lumpsum', models.FloatField(blank=True, default=0.0, null=True)),
                ('sum_invested', models.FloatField(blank=True, default=0.0, null=True)),
                ('returns_value', models.FloatField(blank=True, default=0.0, null=True)),
                ('returns_percentage', models.FloatField(blank=True, default=0.0, null=True)),
                ('one_day_previous_portfolio_value', models.FloatField(blank=True, default=0.0, null=True)),
                ('one_day_return', models.FloatField(blank=True, default=0.0, null=True)),
                ('investment_date', models.DateField(blank=True, null=True)),
                ('fund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Fund')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Portfolio')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('question_id', models.CharField(blank=True, max_length=254)),
                ('type', models.CharField(blank=True, choices=[('C', 'Checkbox'), ('R', 'Radio'), ('T', 'Text'), ('B', 'Blanks'), ('M', 'Multiple Text')], default='', max_length=3)),
                ('question_for', models.CharField(choices=[('A', 'Assess'), ('P', 'Plan'), ('R', 'Retirement'), ('T', 'Tax Saving'), ('BP', 'Buy Property'), ('E', 'Higher Education'), ('W', 'Save for Wedding'), ('O', 'Other Events'), ('I', 'Invest')], max_length=254, verbose_name='category')),
                ('text', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_required', models.BooleanField(default=False, verbose_name='required')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('metadata', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('default_score', models.FloatField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('order', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='RedeemDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('redeem_id', models.CharField(default=0, max_length=10, unique=True, verbose_name='Redeem Id')),
                ('redeem_status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Ongoing'), (2, 'Complete')], default=0)),
                ('fund_redeem_items', models.ManyToManyField(to='core.FundRedeemItem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RiskProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('min_score', models.FloatField()),
                ('max_score', models.FloatField()),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TopThreeSectors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('first_weightage', models.FloatField()),
                ('second_name', models.CharField(max_length=100)),
                ('second_weightage', models.FloatField()),
                ('third_name', models.CharField(max_length=100)),
                ('third_weightage', models.FloatField()),
                ('equity_fund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.EquityFunds')),
            ],
        ),
        migrations.CreateModel(
            name='UserEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('user_email', models.EmailField(max_length=254, unique=True)),
            ],
            options={
                'ordering': ['-modified_at'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='question',
            unique_together=set([('question_id', 'question_for'), ('order', 'question_for')]),
        ),
        migrations.AddField(
            model_name='planassestallocation',
            name='portfolio',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Portfolio'),
        ),
        migrations.AddField(
            model_name='planassestallocation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='option',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='core.Question'),
        ),
        migrations.AddField(
            model_name='historicalindexdata',
            name='index',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Indices'),
        ),
        migrations.AddField(
            model_name='fundredeemitem',
            name='portfolio_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.PortfolioItem'),
        ),
        migrations.AddField(
            model_name='fundorderitem',
            name='portfolio_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.PortfolioItem'),
        ),
        migrations.AddField(
            model_name='fund',
            name='mapped_benchmark',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Indices'),
        ),
        migrations.AddField(
            model_name='equityfunds',
            name='fund',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Fund'),
        ),
        migrations.AddField(
            model_name='debtfunds',
            name='fund',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Fund'),
        ),
        migrations.AddField(
            model_name='answer',
            name='option',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='option', to='core.Option'),
        ),
        migrations.AddField(
            model_name='answer',
            name='portfolio',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Portfolio'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='core.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='portfolioitem',
            unique_together=set([('portfolio', 'fund')]),
        ),
        migrations.AlterUniqueTogether(
            name='option',
            unique_together=set([('question', 'option_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='answer',
            unique_together=set([('question', 'option', 'user', 'metadata')]),
        ),
    ]
